// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/LassiHeikkila/taskey/internal/auth (interfaces: Controller)

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt"
	gomock "github.com/golang/mock/gomock"
)

// MockController is a mock of Controller interface.
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// CreateJWT mocks base method.
func (m *MockController) CreateJWT(arg0 jwt.Claims) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateJWT", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateJWT indicates an expected call of CreateJWT.
func (mr *MockControllerMockRecorder) CreateJWT(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJWT", reflect.TypeOf((*MockController)(nil).CreateJWT), arg0)
}

// GenerateUUID mocks base method.
func (m *MockController) GenerateUUID() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateUUID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateUUID indicates an expected call of GenerateUUID.
func (mr *MockControllerMockRecorder) GenerateUUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateUUID", reflect.TypeOf((*MockController)(nil).GenerateUUID))
}

// ValidateMachineToken mocks base method.
func (m *MockController) ValidateMachineToken(arg0 string, arg1, arg2 *string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateMachineToken", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ValidateMachineToken indicates an expected call of ValidateMachineToken.
func (mr *MockControllerMockRecorder) ValidateMachineToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateMachineToken", reflect.TypeOf((*MockController)(nil).ValidateMachineToken), arg0, arg1, arg2)
}

// ValidateUserToken mocks base method.
func (m *MockController) ValidateUserToken(arg0 string, arg1, arg2 *string, arg3 *int) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUserToken", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ValidateUserToken indicates an expected call of ValidateUserToken.
func (mr *MockControllerMockRecorder) ValidateUserToken(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUserToken", reflect.TypeOf((*MockController)(nil).ValidateUserToken), arg0, arg1, arg2, arg3)
}
